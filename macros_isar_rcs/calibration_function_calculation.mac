background= true;
measurement = true;
clear_variables();
//r = 1.943;
//r = 2.5;
//r=2.674;
r = 17.5;//cm
//r=3.575;
threshold = 100;
NA=10;
N = 4096;
avg = 256;
avgType = 2;
maxFreq = 18;
minFreq = 2;
set_acquire_points(N);
set_averaging(avgType,avg);

if (measurement)
{
	  if (background)
	  {
		    acquire(1,b,2,base);
		    N=count(b);
		    n1=floor(N/10);
		    n2=N-floor(N/10);
		  
		    w=b;
		    w=1;

		    for(i=0;i<n1;i=i+1){
		    w[i]=sqr(sqr(sin(i/n1*pi()/2)));
		    }

		    upper = N - n2;
		    for(i=0;i< upper;i=i+1){
		    index = n2 + i;
		    w[index]=sqr(sqr(sin(pi()*(upper - i)/(upper)/2)));
		    }
		   base2 = lf(base,6,8,-8);
		   
		    pos = 0;
		    maxVal = max(base2,pos);
		    for (ia = 0; ia < N; ia = ia + 1)
		    {
			      if(base2[ia] < maxVal - threshold)
			      {
					base2[ia] = 0;
			      }
			      else
			      {
					base2[ia] = base2[ia] - (maxVal - threshold);
			      }
		    }
		    firstBase = base2;
		    
		    summ=base;
		    summ=0;
		    for(i=0;i<NA;i=i+1)
		    {
			      acquire(1,b,2,current);
			      current2 = lf(current,6,8,-8);
			      
			      pos = 0;
			      maxVal = max(current2,pos);
			      for (ia = 0; ia < N; ia = ia + 1)
			      {
					if(current2[ia] < maxVal - threshold)
					{
						  current2[ia] = 0;
					}
					else
					{
						  current2[ia] = current2[ia] - (maxVal - threshold);
					}
			      }
			      
			      (dt)=difference2(base2,current2);
			      dt = -dt;
			      (s2)=push2(b,dt);
			      summ=summ+s2;
		    }
		    
	  b=lf(w*hf(summ/NA,minFreq,0.5*minFreq,-6),maxFreq,maxFreq*1.1,-6);
	  pause();
	  }

	  summ=base;
	  summ=0;

	  for(i=0;i<NA;i=i+1){
		    acquire(1,sig,2,current);
		    current2 = lf(current,6,8,-8);
		    pos = 0;
		    maxVal = max(current2,pos);
		    for (ia = 0; ia < N; ia = ia + 1)
		    {
			      if(current2[ia] < maxVal - threshold)
			      {
					current2[ia] = 0;
			      }
			      else
			      {
					current2[ia] = current2[ia] - (maxVal - threshold);
			      }
		    }
		    (dt)=difference2(base2,current2);
		    dt = -dt;
		    (s2)=push2(sig,dt);
		    summ=summ+s2;
	  }
	  m1=lf(w*hf(summ/NA,minFreq,0.5*minFreq,-6),maxFreq,maxFreq*1.1,-6)-b;
	  calibrationSignal=m1*w;
	  r10 = lf(w*hf(summ/NA,minFreq,0.5*minFreq,-6),maxFreq,maxFreq*1.1,-6);
	  r11 = b;
	  r1 = calibrationSignal;

}


cutFrequency1 = 40;
cutFrequency2 = 45;
c=30;
ref=r1;
index=0;
srcs =0;
t=window(ref);
p=count(ref);
pt=p/2+1;
td = signal(t,p,false);
rr=fft(td);

x0=0;
df=1/t; 
eps = 0.000001;
rr=1;
for (nr=eps;nr<100;nr=nr+df)
{
	kr = 2*pi()*nr*r/c;
        srcs = 0 + 0*j();
    	f1 =1*j();
    	f2 = 1+0*j() ;
    	m = 1;
    	n = 0;
    	q = -1;
    	del = 10000+10000*j();
	del2=cabs(del);
	//out(del);
	while (del2>eps)
	  {
	  	q = -q;
        	n = n + 1;
        	m = m + 2;
        	del = (2*n-1) * f2 / kr-f1;
        	f1 = f2;
        	//out(f1);
        	f2 = del;
        	//out(f2);
		del=divi(q * m,f2 * (kr * f1 - n * f2));
        	srcs = srcs + del;
        	//out(srcs);
        	//pause();
        	del2=cabs(del);
	}
	rr[index]=srcs;
	index = index + 1;
}




teorSphere=rr*sqrt(pi())*r;


w3=r1;
freqN=count(w3);
n1 = 0.1*freqN;
n2 = 0.4*freqN;
n3 = 0.5*freqN;

//n1 = 0.3*freqN;
//n2 = 0.6*freqN;
//n3 = 0.7*freqN;
w3=1;

for(i=0;i<n1;i=i+1)
{
	w3[i]=sqr(sqr(sin(i/n1*pi()/2)));
}
upper = n3 - n2;
	
for(i=0;i< upper;i=i+1)
{
	 index = n2 + i;
	 w3[index]=sqr(sqr(sin(pi()*(upper - i)/upper/2)));
}

for(i=n3;i<freqN;i=i+1)
{
	w3[i]=0;
}
//r8 = calibrationSignal*w3;
calibrationFunction = divi(conj(teorSphere),fft(calibrationSignal*w3));
r2 = mag(calibrationFunction);
r3 = ifft(calibrationFunction);
